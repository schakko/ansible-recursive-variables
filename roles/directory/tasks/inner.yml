- name: Slash im Namen  
  fail:
    msg: "Der Ordnername darf kein '/' enthalten."
  when: outer_item.name is regex(".*/.*")

# current_directory_name points to the current name of the directory
- set_fact:
    current_directory_name: "{{ outer_item.name }}"

# full_path is our absolute path of all directories we have already recursively visited
- set_fact:
     full_path: "{{ (full_path | default('/')) + current_directory_name + '/' }}"

- set_fact:
    new_permission_path: "{{ defaultPath }}{{ full_path }}"

# Ansible ACL module is setting the document permission
- name: Set Permission
  acl:
    path: "{{ new_permission_path | regex_replace('^\\/|\\/$', '')}}"
    entity: "{{ permission_item.entity }}"
    etype:  "{{ permission_item.etype }}"
    permissions: "{{ permission_item.permission }}"
    state: present
  with_items:
    - "{{ outer_item.permissions }}"
  loop_control:
    loop_var: permission_item

    
# below the first hierarchy level we defined the variable "subdirectories" which contains all subdirectories of the current directory we are in
- set_fact:
    subdirectories: "{{ outer_item.directories }}"
  when: outer_item.directories is defined

# this is important: if we are in a leaf (a directory without subdirectories), we have to set the control variable "subdirectories" to an empty array
- set_fact:
    subdirectories: "{{ [] }}"
  when: outer_item.directories is not defined


# iterate over each subdirectory of the current oute_itemr.directories
- name: Loop Start
  include_tasks: inner.yml
  loop: "{{ subdirectories }}"
  loop_control:
    loop_var: "outer_item"

- set_fact:
    full_path: "{{ full_path.split('/')[0:-2]|join('/') + '/' }}"